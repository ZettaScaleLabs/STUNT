flow: ControlDataDump

vars:
  BASE_DIR: "/var/zenoh-flow"

configuration:
  host: carla
  port: 2000
  map: "{{ BASE_DIR }}/var/maps/town01.xodr"
  frequency: 20
operators:
  - id: PerfectLocalization
    descriptor:  "file://{{ BASE_DIR }}/nodes/operators/perfect-localization/localization.yml"

  - id: BehaviourPlanning
    configuration:
      map: "{{ BASE_DIR }}/var/maps/town01.xodr"
    descriptor:  "file://{{ BASE_DIR }}/nodes/operators/behaviour-planning/behaviour-planning.yml"

  - id: PerfectTracker
    descriptor: "file://{{ BASE_DIR }}/nodes/operators/perfect-tracker/perfect-tracker.yml"

  - id: LinearPredictor
    descriptor: "file://{{ BASE_DIR }}/nodes/operators/linear-predictor/linear-predictor.yml"

  - id: WaypointPlanner
    configuration:
      map: "{{ BASE_DIR }}/var/maps/town01.xodr"
    descriptor: "file://{{ BASE_DIR }}/nodes/operators/waypoint-planner/waypoint-planner.yml"

  - id: PIDController
    configuration:
      # PID parameters
      P: 0.01
      I: 0.1
      D: 0.01
    descriptor: "file://{{ BASE_DIR }}/nodes/operators/pid-control/pid-control.yml"


sources:

  - id : CarlaTrafficLights
    configuration:
      locator: "tcp/zenoh-router:7447"
      mode: "peer"
      key_expression: "stunt/ground-truth/traffic-lights"
    descriptor : "file://{{ BASE_DIR }}/nodes/sources/ground-truth/zenoh-trafficlights/zenoh-trafficlights.yml"

  - id : CarlaObstacles
    configuration:
      locator: "tcp/zenoh-router:7447"
      mode: "peer"
      key_expression: "stunt/ground-truth/obstacles"
      types:
        - 'vehicle.*'
        - 'walker.pedestrian.*'
    descriptor : "file://{{ BASE_DIR }}/nodes/sources/ground-truth/zenoh-obstacles/zenoh-obstacles.yml"

  - id : CarlaLocalization
    configuration:
      locator: "tcp/zenoh-router:7447"
      mode: "peer"
      key_expression: "stunt/ground-truth/location"
    descriptor : "file://{{ BASE_DIR }}/nodes/sources/ground-truth/zenoh-localization/zenoh-location.yml"

  - id: RoutePlanner
    configuration:
      goal: [387.73, 330.07, 0.0]
      #goal: [116.0, 129.0, 0.0]
      #goal: [84.0, 130.0, 0.0]
      # map: {{ BASE_DIR }}/var/maps/town01.xodr
      map: "{{ BASE_DIR }}/var/maps/town01.xodr"
    descriptor: "file://{{ BASE_DIR }}/nodes/sources/route-planner/route-planner.yml"

sinks:
  - id : PyPrint
    descriptor : "file://{{ BASE_DIR }}/nodes/sinks/generic-sink-py/generic-sink.yml"

  - id : Drive
    configuration:
      locator: "tcp/zenoh-router:7447"
      mode: "peer"
      key_expression: "stunt/ego-control"
    descriptor : "file://{{ BASE_DIR }}/nodes/sinks/zenoh-control/zenoh-control.yml"

links:
#sources
- from:
    node : CarlaLocalization
    output : Pose
  to:
    node : PerfectLocalization
    input : Pose

- from:
    node : CarlaObstacles
    output : Obstacles
  to:
    node : PerfectTracker
    input : Obstacles

- from:
    node : RoutePlanner
    output : Route
  to:
    node : BehaviourPlanning
    input : Route

# operators

- from:
    node : PerfectLocalization
    output : Pose
  to:
    node : PerfectTracker
    input : Pose

- from:
    node : PerfectTracker
    output : ObstacleTrajectories
  to:
    node : LinearPredictor
    input : ObstacleTrajectories

- from:
    node : PerfectLocalization
    output : Pose
  to:
    node : BehaviourPlanning
    input : Pose


- from:
    node : PerfectLocalization
    output : Pose
  to:
    node : WaypointPlanner
    input : Pose

- from:
    node : BehaviourPlanning
    output : Trajectory
  to:
    node : WaypointPlanner
    input : Trajectory

- from:
    node : LinearPredictor
    output : ObstaclePredictions
  to:
    node : WaypointPlanner
    input : ObstaclePredictions

- from:
    node : CarlaTrafficLights
    output : TrafficLights
  to:
    node : WaypointPlanner
    input : TrafficLights


- from:
    node : WaypointPlanner
    output : Waypoints
  to:
    node : PIDController
    input : Waypoints

- from:
    node : PerfectLocalization
    output : Pose
  to:
    node : PIDController
    input : Pose

# sinks
- from:
    node : PIDController
    output : Control
  to:
    node : PyPrint
    input : Data

- from:
    node : PIDController
    output : Control
  to:
    node : Drive
    input : Data